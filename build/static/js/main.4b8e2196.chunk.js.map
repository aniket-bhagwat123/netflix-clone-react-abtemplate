{"version":3,"sources":["Header.jsx","Banner.jsx","NetflixOrignal.jsx","TrendingNow.jsx","TvSeries.jsx","Homepage.jsx","Details.jsx","TvSeriesDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","HomereDirect","setState","homePage","state","this","to","className","href","onClick","src","process","alt","React","Component","Banner","ViewDetails","id","movieId","detailsview","bannerImg","autoPlaySpeed","autoPlay","map","item","backdrop_path","title","type","overview","NetflixOrignal","tvmovieshow","settings","dots","infinite","autoplay","speed","slidesToShow","slidesToScroll","responsive","breakpoint","initialSlide","poster","poster_path","TrendingNow","TvSeries","tvshowId","tvshows","Homepage","movies","tvShowsapi","axios","get","then","res","console","log","data","resnew","results","customStyles","content","top","left","right","bottom","marginRight","transform","Details","moviedetailsAPI","match","params","moviesDetails","LanguagesHere","spoken_languages","name","productionCompany","production_companies","movieVideoAPI","moviesVideos","videoUrl","key","openModal","modalIsOpen","closeModal","class","aria-hidden","release_date","runtime","isOpen","onRequestClose","style","contentLabel","allowfullscreen","TvSeriesDetails","tvshowsdetailsAPI","tvshowsDetails","languages","tvshowseasons","seasons","length","episode_run_time","tvshowsVideoAPI","tvshowsVideos","first_air_date","time","lang","number_of_episodes","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4b8e2196.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\t\t  homePage : false,\r\n\t\t}\r\n    }\r\n    HomereDirect = () => {\r\n        this.setState({homePage: true})\r\n    }\r\n    render() {\r\n        if(this.state.homePage == true){\r\n            return <Redirect to={\"/\"} />\r\n        }\r\n        return (\r\n            <div className=\"headerSet\">\r\n                <nav className=\"navbar\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"navbar-header\">\r\n                            <a className=\"navbar-brand headerLogo\" href=\"javascript:void(0);\" onClick={() => this.HomereDirect()}>\r\n                                <img src={process.env.PUBLIC_URL+\"/img/logo.png\"} className=\"img-responsive\" alt=\"Netflix\" />\r\n                            </a>\r\n                        </div>\r\n                        <ul className=\"nav navbar-nav navbar-right \">\r\n                            <li className=\"users\">\r\n                                <a href=\"javascript:void(0);\" className=\"userProfile\">\r\n                                    <img src={process.env.PUBLIC_URL+\"/img/user.png\"} className=\"img-responsive\" alt=\"Netflix\" />\r\n                                </a>    \r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\nexport default Header;\r\n","import React from 'react';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; \r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nclass Banner extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\t\t\tdetailsview : false,\r\n            movieId : \"\", \r\n\t\t}\r\n    }\r\n    ViewDetails = (id) =>{\r\n        this.setState({movieId : id, detailsview: true})\r\n    }\r\n    render() {\r\n        if(this.state.detailsview == true){\r\n            return <Redirect to={\"/Details/\" + this.state.movieId} />\r\n        }\r\n        let {bannerImg} = this.props;\r\n        return (\r\n            <Carousel autoPlaySpeed={1000} autoPlay={true} >\r\n                {bannerImg && bannerImg.map((item) => {\r\n                    return(\r\n                        <div>\r\n                            <img src={\" http://image.tmdb.org/t/p/original\"+item.backdrop_path} />\r\n                            <div className=\"bannContent col-md-12\">\r\n                                <h2>{item.title}</h2>\r\n                                <div className=\"bannerGroup\">\r\n                                    <button type=\"button\" className=\"btn bannerbnt\" onClick={() => this.ViewDetails(item.id)}>Play</button>\r\n                                    <button type=\"button\" className=\"btn bannerbnt\" onClick={() => this.ViewDetails(item.id)}>My List</button>\r\n                                </div>\r\n                                <p>{item.overview}</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </Carousel>\r\n        )\r\n    }\r\n   \r\n}\r\nexport default Banner;\r\n","import React from 'react';\r\nimport Slider from \"react-slick\";\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nclass NetflixOrignal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            detailsview : false,\r\n            movieId : \"\", \r\n\t\t}\r\n    }\r\n\r\n    ViewDetails = (id) =>{\r\n        this.setState({movieId : id, detailsview: true})\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.detailsview == true){\r\n            return <Redirect to={\"/Details/\" + this.state.movieId} />\r\n        }\r\n        let {tvmovieshow} = this.props;\r\n        var settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            autoplay: true,\r\n            speed: 1500,\r\n            slidesToShow: 9,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                breakpoint: 991,\r\n                    settings: {\r\n                        slidesToShow: 6,\r\n                        slidesToScroll: 6,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                breakpoint: 767,\r\n                    settings: {\r\n                        slidesToShow: 4,\r\n                        slidesToScroll: 1,\r\n                        initialSlide: 1\r\n                    }\r\n                },\r\n                {\r\n                breakpoint: 640,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                breakpoint: 540,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n             \r\n        return (\r\n            <div className=\"movielist\">\r\n                <div className=\"col-md-12\">\r\n                    <h3 className=\"showsHead\">NETFLIX ORIGINALS</h3>\r\n                    <div className=\"slidermainShow\">\r\n                        <Slider {...settings}>\r\n                            {tvmovieshow && tvmovieshow.map((poster) => {\r\n                                return(\r\n                                    <div className=\"itemMovielist\" onClick={() => this.ViewDetails(poster.id)}>\r\n                                        <img src={\" http://image.tmdb.org/t/p/w185/\"+poster.poster_path} className=\"img-responsive\"/>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\nexport default NetflixOrignal;\r\n","import React from 'react';\r\nimport Slider from \"react-slick\";\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nclass TrendingNow extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            detailsview : false,\r\n            movieId : \"\", \r\n\t\t    }\r\n    }\r\n\r\n    ViewDetails = (id) =>{\r\n      this.setState({movieId : id, detailsview: true})\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.detailsview == true){\r\n            return <Redirect to={\"/Details/\" + this.state.movieId} />\r\n        }\r\n        let {tvmovieshow} = this.props;\r\n        var settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            autoplay: true,\r\n            speed: 1500,\r\n            slidesToShow: 8,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                  breakpoint: 991,\r\n                  settings: {\r\n                    slidesToShow: 6,\r\n                    slidesToScroll: 6,\r\n                    infinite: true,\r\n                    dots: true\r\n                  }\r\n                },\r\n                {\r\n                  breakpoint: 767,\r\n                  settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1,\r\n                    initialSlide: 1\r\n                  }\r\n                },\r\n                {\r\n                  breakpoint: 640,\r\n                  settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 1\r\n                  }\r\n                },\r\n                {\r\n                  breakpoint: 540,\r\n                  settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 1\r\n                  }\r\n                }\r\n              ]\r\n          };\r\n        return (\r\n            <div className=\"movielist\">\r\n                <div className=\"col-md-12\">\r\n                    <h3 className=\"showsHead\">Trending Now</h3>\r\n                    <div className=\"slidermainShow\">\r\n                        <Slider {...settings}>\r\n                            {tvmovieshow && tvmovieshow.map((poster) => {\r\n                                return(\r\n                                    <div className=\"itemMovielist\" onClick={() => this.ViewDetails(poster.id)}>\r\n                                        <img src={\" http://image.tmdb.org/t/p/w185/\"+poster.backdrop_path} className=\"img-responsive\"/>\r\n                                    </div>\r\n                                    )\r\n                            })}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\nexport default TrendingNow;\r\n","import React from 'react';\r\nimport Slider from \"react-slick\";\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nclass TvSeries extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            detailsview : false,\r\n            tvshowId : \"\", \r\n\t\t}\r\n    }\r\n\r\n    ViewDetails = (id) =>{\r\n      this.setState({tvshowId : id, detailsview: true})\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.detailsview == true){\r\n            return <Redirect to={\"/TvSeriesDetails/\" + this.state.tvshowId} />\r\n        }\r\n        let {tvshows} = this.props;\r\n        var settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            autoplay: true,\r\n            speed: 1500,\r\n            slidesToShow: 8,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                  breakpoint: 991,\r\n                  settings: {\r\n                    slidesToShow: 6,\r\n                    slidesToScroll: 6,\r\n                    infinite: true,\r\n                    dots: true\r\n                  }\r\n                },\r\n                {\r\n                  breakpoint: 767,\r\n                  settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1,\r\n                    initialSlide: 1\r\n                  }\r\n                },\r\n                {\r\n                  breakpoint: 640,\r\n                  settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 1\r\n                  }\r\n                },\r\n                {\r\n                  breakpoint: 540,\r\n                  settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 1\r\n                  }\r\n                }\r\n              ]\r\n          };\r\n        return (\r\n            <div className=\"movielist\">\r\n                <div className=\"col-md-12\">\r\n                    <h3 className=\"showsHead\">TV Show</h3>\r\n                    <div className=\"slidermainShow\">\r\n                        <Slider {...settings}>\r\n                            {tvshows && tvshows.map((poster) => {\r\n                                return(\r\n                                    <div className=\"itemMovielist\" onClick={() => this.ViewDetails(poster.id)}>\r\n                                        <img src={\" http://image.tmdb.org/t/p/w185/\"+poster.backdrop_path} className=\"img-responsive\"/>\r\n                                    </div>\r\n                                    )\r\n                            })}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\nexport default TvSeries;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Header'\r\nimport Banner from './Banner'\r\nimport NetflixOrignal from './NetflixOrignal'\r\nimport TrendingNow from './TrendingNow'\r\nimport TvSeries from './TvSeries'\r\nimport axios from 'axios';\r\n\r\n\r\nclass Homepage extends React.Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        movies: {},\r\n        tvShowsapi: {},\r\n    }\r\n    \r\n  }\r\n  componentDidMount() {\r\n    axios.get(\"https://api.themoviedb.org/4/list/1?api_key=6d509219e4a4930feb8a3e9ae47b3a7a\")\r\n      .then((res) => {\r\n        console.log(\"response===>\", res);\r\n        this.setState({ movies: res.data });\r\n      })\r\n\r\n    axios.get(\"https://api.themoviedb.org/3/tv/popular?api_key=6d509219e4a4930feb8a3e9ae47b3a7a&language=en-US&page=1\")\r\n      .then((resnew) => {\r\n        console.log(\"response===>\", resnew);\r\n        this.setState({ tvShowsapi: resnew.data });\r\n      })\r\n  }\r\n   \r\n  render() {\r\n    // console.log(\"this.state.movies==>\", this.state.movies)\r\n    return (\r\n        <div className=\"Homepage\">\r\n\r\n          {/* header start here */}\r\n\r\n            <Header />\r\n\r\n          {/* header end here */}\r\n\r\n          {/* banner start here */}\r\n\r\n            <div className=\"bannerSection\">\r\n                <Banner bannerImg={this.state.movies.results && this.state.movies.results}  />\r\n                <div className=\"bannerOvarlay\"></div>\r\n            </div>\r\n\r\n          {/* banner end here */}\r\n          \r\n          {/* tetflix shows slider here */}\r\n\r\n            <NetflixOrignal tvmovieshow={this.state.movies.results && this.state.movies.results}/>\r\n\r\n          {/* tetflix shows slider here */}\r\n\r\n          {/* Trending Now slider here */}\r\n          \r\n          <TrendingNow tvmovieshow={this.state.movies.results && this.state.movies.results}/>\r\n\r\n          {/* Trending Now slider here */}\r\n\r\n          {/* Tv Series slider here */}\r\n\r\n          <TvSeries tvshows={this.state.tvShowsapi.results && this.state.tvShowsapi.results}/>\r\n\r\n          {/* Tv Series slider here */}\r\n\r\n           \r\n        </div>\r\n      )\r\n    }\r\n   \r\n}\r\n\r\nexport default Homepage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Header from './Header';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nclass Details extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        moviesDetails: {},\r\n        moviesVideos: {},\r\n        videoUrl:\"\",\r\n        LanguagesHere:\"\",\r\n        productionCompany:\"\",\r\n        modalIsOpen: false\r\n      }\r\n    }\r\n\r\n    HomereDirect = () => {\r\n      this.setState({homePage: true})\r\n    }\r\n     \r\n    componentDidMount(){\r\n      this.moviedetailsAPI();\r\n      this.movieVideoAPI();\r\n    }\r\n\r\n    moviedetailsAPI = () =>{\r\n      console.log(\"url data===>\", this.props.match.params.id);\r\n      axios.get(\"https://api.themoviedb.org/3/movie/\"+this.props.match.params.id+\"?api_key=6d509219e4a4930feb8a3e9ae47b3a7a\")\r\n      .then((res) => {\r\n        console.log(\"response===>\", res);\r\n        this.setState({ moviesDetails: res.data,LanguagesHere: res.data.spoken_languages[0].name,productionCompany: res.data.production_companies[0].name});\r\n      })\r\n    }\r\n\r\n    movieVideoAPI = () =>{\r\n      console.log(\"url data===>\", this.props.match.params.id);\r\n      axios.get(\"https://api.themoviedb.org/3/movie/\"+this.props.match.params.id+\"/videos?api_key=6d509219e4a4930feb8a3e9ae47b3a7a\")\r\n      .then((res) => {\r\n        console.log(\"response===>\", res);\r\n        this.setState({ moviesVideos: res.data,videoUrl: res.data.results[0].key});\r\n      })\r\n    }\r\n\r\n    openModal = () => {\r\n      this.setState({modalIsOpen: true})\r\n    }\r\n\r\n    closeModal = () => {\r\n      this.setState({modalIsOpen: false})\r\n    }\r\n \r\n     render() {\r\n        if(this.state.homePage == true){\r\n            return <Redirect to={\"/\"} />\r\n        }\r\n        // let { } = this.props;\r\n        let {moviesDetails,moviesVideos, modalIsOpen} = this.state;\r\n        return (\r\n          <div className=\"mainwrapper\">\r\n            {/* header start here */}\r\n            <Header />\r\n            {/* header end here */}\r\n\r\n            <div className=\"mainDetailscomp\">\r\n                <div className=\"backgrImgwrap\">\r\n                    <div className=\"backgrImg\" onClick={() => this.openModal()}>\r\n                        <img src={\"http://image.tmdb.org/t/p/original/\"+ moviesDetails.backdrop_path} className=\"img-responsive backGrImage\"/>\r\n                        <div className=\"plybuton\">\r\n                            <i class=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                        </div>\r\n                        <div class=\"bannerOvarlay\"></div>\r\n                    </div>\r\n                    <div className=\"detailsMovieset\">\r\n                        <div className=\"container\">\r\n                            <div className=\"detailsMoviesetmg\">\r\n                                <div className=\"mainsmllImg\">\r\n                                    <img src={\" http://image.tmdb.org/t/p/w185/\"+ moviesDetails.poster_path} className=\"img-responsive\"/>\r\n                                </div>\r\n                                <div className=\"detailshere\">\r\n                                    <h2>{moviesDetails.title}</h2>\r\n                                    <button className=\"btn backbtn\" onClick={() => this.HomereDirect()}>Back</button>\r\n                                    <p>{moviesDetails.overview}</p>\r\n                                    <ul className=\"listdetails\">\r\n                                        <li><span>Release Date :</span>{moviesDetails.release_date}</li>\r\n                                        <li><span>Runtime :</span>{moviesDetails.runtime}&nbsp;Min</li>\r\n                                        <li><span>Languages :</span>{this.state.LanguagesHere}</li>\r\n                                        <li><span>Production Companies :</span>{this.state.productionCompany}</li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* modal start here */}\r\n                    <Modal isOpen={modalIsOpen} onRequestClose={() => this.closeModal()} style={customStyles} contentLabel=\"Example Modal\" >            \r\n                      <span className=\"closepopup\" onClick={() => this.closeModal()}>\r\n                        <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                      <div className=\"modalvideo\">\r\n                        <iframe src={\"https://www.youtube.com/embed/\"+this.state.videoUrl}  allowfullscreen></iframe>\r\n                      </div>\r\n                    </Modal> \r\n                    {/* modal end here */}\r\n                </div>\r\n              </div>\r\n          </div>\r\n        )\r\n    }\r\n   \r\n}\r\nexport default Details;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Header from './Header';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nclass TvSeriesDetails extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        tvshowsDetails: {},\r\n        tvshowsVideos: {},\r\n        videoUrl:\"\",\r\n        languages:[],\r\n        runtime:[],\r\n        tvshowseasons:\"\",\r\n        modalIsOpen: false\r\n      }\r\n    }\r\n\r\n    HomereDirect = () => {\r\n      this.setState({homePage: true})\r\n    }\r\n     \r\n    componentDidMount(){\r\n      this.tvshowsdetailsAPI();\r\n      this.tvshowsVideoAPI();\r\n    }\r\n\r\n    tvshowsdetailsAPI = () =>{\r\n      console.log(\"url data===>\", this.props.match.params.id);\r\n      axios.get(\"https://api.themoviedb.org/3/tv/\"+this.props.match.params.id+\"?api_key=6d509219e4a4930feb8a3e9ae47b3a7a\")\r\n      .then((res) => {\r\n        console.log(\"response===>\", res);\r\n        this.setState({ tvshowsDetails: res.data,languages: res.data.languages,tvshowseasons: res.data.seasons.length,runtime: res.data.episode_run_time});\r\n      })\r\n    }\r\n\r\n    tvshowsVideoAPI = () =>{\r\n      console.log(\"url data===>\", this.props.match.params.id);\r\n      axios.get(\"https://api.themoviedb.org/3/tv/\"+this.props.match.params.id+\"/videos?api_key=6d509219e4a4930feb8a3e9ae47b3a7a\")\r\n      .then((res) => {\r\n        console.log(\"response===>\", res);\r\n        this.setState({ tvshowsVideos: res.data,videoUrl: res.data.results[0].key});\r\n      })\r\n    }\r\n\r\n    openModal = () => {\r\n      this.setState({modalIsOpen: true})\r\n    }\r\n\r\n    closeModal = () => {\r\n      this.setState({modalIsOpen: false})\r\n    }\r\n \r\n     render() {\r\n        if(this.state.homePage == true){\r\n            return <Redirect to={\"/\"} />\r\n        }\r\n        // let { } = this.props;\r\n        let {tvshowsDetails,tvshowsVideos, modalIsOpen} = this.state;\r\n        return (\r\n          <div className=\"mainwrapper\">\r\n            {/* header start here */}\r\n            <Header />\r\n            {/* header end here */}\r\n\r\n            <div className=\"mainDetailscomp\">\r\n                <div className=\"backgrImgwrap\">\r\n                    <div className=\"backgrImg\" onClick={() => this.openModal()}>\r\n                        <img src={\"http://image.tmdb.org/t/p/original\"+ tvshowsDetails.backdrop_path} className=\"img-responsive backGrImage\"/>\r\n                        <div className=\"plybuton\">\r\n                            <i class=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                        </div>\r\n                        <div class=\"bannerOvarlay\"></div>\r\n                    </div>\r\n                    <div className=\"detailsMovieset\">\r\n                        <div className=\"container\">\r\n                            <div className=\"detailsMoviesetmg\">\r\n                                <div className=\"mainsmllImg\">\r\n                                    <img src={\"https://image.tmdb.org/t/p/w185/\"+ tvshowsDetails.poster_path} className=\"img-responsive\"/>\r\n                                </div>\r\n                                <div className=\"detailshere\">\r\n                                    <h2>{tvshowsDetails.name}</h2>\r\n                                    <button className=\"btn backbtn\" onClick={() => this.HomereDirect()}>Back</button>\r\n                                    <p>{tvshowsDetails.overview}</p>\r\n                                    <ul className=\"listdetails\">\r\n                                        <li><span>Release Date :</span>{tvshowsDetails.first_air_date}</li>\r\n                                        <li>\r\n                                            <span>Runtime :</span>\r\n                                            <ul className=\"langlist\">\r\n                                            {this.state.runtime.map((time) => {\r\n                                                return(\r\n                                                    <li>{time} Min</li>\r\n                                                )\r\n                                            })}\r\n                                            </ul>\r\n                                        </li>\r\n                                        <li>\r\n                                            <span>Languages :</span>\r\n                                            <ul className=\"langlist\">\r\n                                            {this.state.languages.map((lang) => {\r\n                                                return(\r\n                                                    <li>{lang}</li>\r\n                                                )\r\n                                            })}\r\n                                            </ul>\r\n                                        </li>\r\n                                        <li><span>Total Seasons :</span>{this.state.tvshowseasons}</li>\r\n                                        <li><span>Total Episodes :</span>{tvshowsDetails.number_of_episodes}</li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* modal start here */}\r\n                    <Modal isOpen={modalIsOpen} onRequestClose={() => this.closeModal()} style={customStyles} contentLabel=\"Example Modal\" >            \r\n                      <span className=\"closepopup\" onClick={() => this.closeModal()}>\r\n                        <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                      <div className=\"modalvideo\">\r\n                        <iframe src={\"https://www.youtube.com/embed/\"+this.state.videoUrl}  allowfullscreen></iframe>\r\n                      </div>\r\n                    </Modal> \r\n                    {/* modal end here */}\r\n                </div>\r\n              </div>\r\n          </div>\r\n        )\r\n    }\r\n   \r\n}\r\nexport default TvSeriesDetails;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'; \nimport Homepage from './Homepage';\nimport Details from './Details';\nimport TvSeriesDetails from './TvSeriesDetails';\n\n\nclass App extends React.Component {\n  render() {\n    // console.log(\"this.state.movies==>\", this.state.movies)\n    return (\n        <div className=\"App\">\n\n          <Router> \n              <Switch> \n                  <Route exact path='/' component={Homepage}></Route>\n                  <Route exact path='/Details/:id' component={Details}></Route>\n                  <Route exact path='/TvSeriesDetails/:id' component={TvSeriesDetails}></Route> \n              </Switch> \n          </Router>\n           \n        </div>\n      )\n    }\n   \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}